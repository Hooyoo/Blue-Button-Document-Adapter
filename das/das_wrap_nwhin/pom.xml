<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.osehra.das</groupId>
	<artifactId>das_wrap_nwhin</artifactId>
	<!-- NEW VERSION FORMAT -->
	<!-- DasVersion.Sprint.SprintVersion.Buildnumber -->
	<version>2.10.1.24-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>das_wrap_nwhin</name>
	<parent>
		<groupId>org.osehra.das</groupId>
		<artifactId>das</artifactId>
		<relativePath>../</relativePath>
		<!-- NEW VERSION FORMAT -->
		<!-- DasVersion.Sprint.SprintVersion.Buildnumber -->
		<version>2.10.1.24-SNAPSHOT</version>
	</parent>
	<properties>
		<propertyFile.name>web.properties</propertyFile.name>
		<!-- Need for duplicate web.properties files probably related to here. -->
		<propertyFile.srcDir>src/main/application/org/osehra/das/wrapper/nwhin</propertyFile.srcDir>
		<propertyFile.deployDir>${DAS_DOMAIN_HOME}/lib/org/osehra/das/wrapper/nwhin</propertyFile.deployDir>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.osehra.integration</groupId>
			<artifactId>integration-test</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osehra.integration</groupId>
			<artifactId>integration-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osehra.integration</groupId>
			<artifactId>integration-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osehra.integration</groupId>
			<artifactId>integration-file</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osehra.integration</groupId>
			<artifactId>integration-pojo</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osehra.integration</groupId>
			<artifactId>integration-bpm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osehra.integration</groupId>
			<artifactId>integration-feed</artifactId>
		</dependency>
		<dependency>
			<groupId>org.osehra.integration</groupId>
			<artifactId>integration-jms</artifactId>
		</dependency>
		<dependency>
			<groupId>javaee</groupId>
			<artifactId>javaee-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
		</dependency>
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>das_common</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>
		<dependency>
			<groupId>asm</groupId>
			<artifactId>asm</artifactId>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
		</dependency>
		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
		</dependency>
		<!-- <dependency>
			<groupId>weblogic</groupId>
			<artifactId>wlfullclient</artifactId>
		</dependency>  -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-server</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-atom-abdera</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-atom</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-json</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-multipart</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-guice</artifactId>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-guice</artifactId>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-jersey</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
		</dependency>
		<!-- MRM Added. -->
		<dependency> 
				<groupId>org.hibernate</groupId> 
				<artifactId>hibernate-ehcache</artifactId> 
		</dependency>
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>das_mock</artifactId>
			<!-- ADD FOR PRODUCTION AND LIVE TESTING <scope>test</scope>-->
		</dependency>
		<dependency>
    		<groupId>com.mockrunner</groupId>
    		<artifactId>mockrunner-jms</artifactId>
		</dependency>
	</dependencies>
	<build>
		<filters>
			<!--
			${pomProperties.dir} is set in das/pom.xml
			-->
			<filter>${pomProperties.dir}/pom.properties</filter>
		</filters>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries />
							<addDefaultSpecificationEntries />
						</manifest>
						<manifestEntries>
							<Build-das>${project.version}</Build-das>
						</manifestEntries>
						<manifestFile />
						<pomPropertiesFile />
					</archive>
				</configuration>
			</plugin>
			<!--
				maven-resources-plugin needs to be before maven-assembly-plugin so the properties file
				is filtered first using the pom.properites file so a filtered properties file is added to
				the tar.gz file
			-->
<!-- 			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>copy-das-resources-for-tar</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>${propertyFile.srcDir}</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin> -->
			<!-- <plugin>
				
					create a tar file as defined in src/main/assembly/distribution.xml
				
			   <artifactId>maven-assembly-plugin</artifactId>
			   <executions>
				 <execution>
				   <goals>
					 <goal>single</goal>
				   </goals>
				   <phase>package</phase>
				 </execution>
			   </executions>
			   <configuration>
				 <descriptor>src/main/assembly/distribution.xml</descriptor>
			   </configuration>
			 </plugin> -->
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>deploy</id>
			<build>
				<filters>
					<filter>../../pom.properties</filter>
				</filters>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<id>copy-das-resources</id>
								<!-- here the phase you need -->
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${propertyFile.deployDir}</outputDirectory>
									<resources>
										<resource>
											<directory>${propertyFile.srcDir}</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>Deploy DAS NwHIN Wrapper</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${WEBLOGIC_HOME}/common/bin/${weblogic.wlst}</executable>
									<arguments>
										<argument>./src/main/resources/wlst/wls-deploy-war.py</argument>
										<argument>${project.name}</argument>
										<argument>${project.build.directory}/das_wrap_nwhin-${pom.version}.war</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>undeploy</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>Deploy DAS NwHIN Wrapper</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>${WEBLOGIC_HOME}/common/bin/${weblogic.wlst}</executable>
									<arguments>
										<argument>./src/main/resources/wlst/wls-undeploy-war.py</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		</profiles>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<reportSets>
					<reportSet>
						<id>uml</id>
						<configuration>
							<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
							<docletArtifact>
								<groupId>org.umlgraph</groupId>
								<artifactId>doclet</artifactId>
								<version>5.1</version>
							</docletArtifact>
							<additionalparam>-views</additionalparam>
							<destDir>target/uml</destDir>
							<show>private</show>
						</configuration>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>